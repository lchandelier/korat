/* useful conversion for breakpoint
* see http://www.stubbornella.org/content/2013/07/01/easy-peasy-rem-conversion-with-sass/
*/
@function calculateRem($size) {
  $remSize: $size / $base_font_size;
  @return #{$remSize}rem;
}

/* rem/px management
* use only if you need to support IE8
* see http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/
* example of use 
* @include rem(font-size, 1.6rem);
* @include rem(padding, 20px 10px);
* will output:
*  font-size: 16px;  
*  font-size: 1.6rem;
*  padding: 20px 10px; 
*  padding: 2rem 1rem;
*/

@function parseInt($n) { // 2 
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : (); // 3
  $rem: (); // 3 

  @each $value in $values { // 4 

    @if $value == 0 or $value == auto { // 5 
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else {
      $unit: unit($value);    //6
      $val: parseInt($value); // 6

      @if $unit == "px" {  // 7
        $px : append($px,  $value);
        $rem: append($rem, ($val / 10 + rem));
      }

      @if $unit == "rem" { // 7
        $px : append($px,  ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {     // 8
    #{$property}: $px;  // 9
  } @else {
    #{$property}: $px;  // 9
    #{$property}: $rem; // 9
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

/* breakpoints
* see http://thesassway.com/intermediate/responsive-web-design-in-sass-using-media-queries-in-sass-32
*/

@mixin respond-to($media) {
    // mobile max 415
    @if $media == mobile {
        @media screen and (max-width: ($break_small) ) { @content; }
    }
	// 416 to 768
	@else if $media == portrait {
	   @media screen and (min-width: $break_small) and (max-width: ($break_medium)-1 ) { @content; }
	}
	// 769 to 959
	@else if $media == landscape {
	   @media screen and (min-width: $break_medium)  and (max-width: ($break_large)-1) { @content; }
	}
	// 960 to 1279
	@else if $media == large {
	   @media screen and (min-width: $break_large) and (max-width: ($break_wide)-1 ) { @content; }
	}
    // 1280
    @else if $media == wide {
        @media screen and (min-width: $break_wide)  { @content; }
    }

    @else if $media == mobile_to_landscape {
        @media screen and (max-width: ($break_medium) ) { @content; }
    }

    @else if $media == mobile_to_large {
        @media screen and (max-width: ($break_large))  { @content; }
    }
}